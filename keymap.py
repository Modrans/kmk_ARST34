# Keymap Autogenerated by Pog do not edit
from kmk.keys import KC
from kmk.modules.macros import Macros, Press, Release, Tap, Delay
from kmk.modules.combos import Chord, Sequence

import pog
import customkeys

keymap = [
    [KC.Q, KC.W, KC.F, KC.P, KC.B, KC.J, KC.L, KC.U, KC.Y, KC.TD(KC.QUOT,KC.SCLN), KC.A, KC.R, KC.S, KC.T, KC.G, KC.M, KC.N, KC.E, KC.TD(KC.I,KC.O), KC.O, KC.HT(KC.Z,KC.LGUI), KC.HT(KC.X,KC.LALT, tap_interrupted=True), KC.HT(KC.C,KC.LCTL, tap_interrupted=True), KC.HT(KC.D,KC.LSFT, tap_interrupted=True), KC.V, KC.K, KC.HT(KC.H,KC.RSFT, tap_interrupted=True), KC.HT(KC.COMM,KC.RCTRL, tap_interrupted=True), KC.HT(KC.DOT,KC.RALT, tap_interrupted=True), KC.HT(KC.SLSH,KC.RGUI), KC.HT(KC.TAB,KC.MO(2)), KC.SPC, KC.BSPC, KC.HT(KC.DEL,KC.MO(1))], [KC.MINS, KC.N7, KC.N8, KC.N9, KC.ASTERISK, KC.PGUP, KC.HOME, KC.UP, KC.END, KC.PSCREEN, KC.SCLN, KC.N4, KC.N5, KC.N6, KC.EQL, KC.UNDERSCORE, KC.LEFT, KC.DOWN, KC.RIGHT, KC.INSERT, KC.GRV, KC.HT(KC.N1,KC.LALT, tap_interrupted=True), KC.HT(KC.N2,KC.LCTL, tap_interrupted=True), KC.HT(KC.N3,KC.LSFT, tap_interrupted=True), KC.BSLS, KC.PGDOWN, KC.LSFT, KC.ESC, KC.DEL, KC.RGUI, KC.DOT, KC.N0, KC.MINS, KC.TRNS], [KC.TO(3), KC.F7, KC.F8, KC.F9, KC.F12, KC.TRNS, KC.ESC, KC.TILDE, KC.TRNS, KC.TRNS, KC.OS(KC.LGUI), KC.OS(KC.LALT), KC.OS(KC.LCTL), KC.OS(KC.LSFT), KC.F11, KC.CAPS, KC.OS(KC.RSFT), KC.OS(KC.RCTL), KC.OS(KC.RALT), KC.OS(KC.RGUI), KC.TRNS, KC.F1, KC.F2, KC.F3, KC.F10, KC.TRNS, KC.TRNS, KC.LBRC, KC.RBRC, KC.BSLS, KC.TRNS, KC.TRNS, KC.ENT, KC.TRNS], [KC.TO(4), KC.LALT(KC.LEFT), KC.LALT(KC.RIGHT), KC.ENT, KC.MW_UP, KC.RSFT(KC.W), KC.RCTL(KC.RALT(KC.DEL)), KC.TRNS, KC.TRNS, KC.SPC, KC.LCTL(KC.A), KC.MB_MMB, KC.MB_RMB, KC.MB_LMB, KC.MW_DN, KC.TRNS, KC.TRNS, KC.TRNS, KC.TRNS, KC.TRNS, KC.HT(KC.LCTL(KC.Z),KC.LGUI, tap_interrupted=True), KC.HT(KC.LCTL(KC.X),KC.LALT, tap_interrupted=True), KC.HT(KC.LCTL(KC.C),KC.LCTL, tap_interrupted=True), KC.HT(KC.LCTL(KC.V),KC.LSFT, tap_interrupted=True), KC.DEL, KC.TRNS, KC.TRNS, KC.TRNS, KC.TRNS, KC.END, KC.TO(0), KC.BSPC, KC.TRNS, KC.TRNS], [KC.TO(3), KC.RCTL(KC.RSFT(KC.T)), KC.RCTL(KC.RSFT(KC.TAB)), KC.RCTL(KC.TAB), KC.MW_UP, KC.TRNS, KC.TRNS, KC.TRNS, KC.TRNS, KC.TO(5), KC.RCTL(KC.T), KC.RCTL(KC.W), KC.MB_RMB, KC.MB_LMB, KC.MW_DN, KC.TRNS, KC.TRNS, KC.TRNS, KC.TRNS, KC.TRNS, KC.LGUI, KC.LALT, KC.LCTL, KC.LSFT, KC.DEL, KC.TRNS, KC.RSFT, KC.RCTL, KC.RALT, KC.RGUI, KC.TO(0), KC.BSPC, KC.TRNS, KC.TRNS], [KC.Q, KC.W, KC.E, KC.R, KC.T, KC.TO(0), KC.TRNS, KC.TRNS, KC.TRNS, KC.TO(0), KC.A, KC.S, KC.D, KC.F, KC.G, KC.ENT, KC.TRNS, KC.TRNS, KC.TRNS, KC.TRNS, KC.Z, KC.X, KC.C, KC.V, KC.B, KC.TAB, KC.TRNS, KC.TRNS, KC.TRNS, KC.TRNS, KC.LSFT, KC.SPC, KC.TRNS, KC.TRNS]
]

encoderKeymap = []
for l, layer in enumerate(pog.config['encoderKeymap']):
    layerEncoders = []
    for e, encoder in enumerate(layer):
        layerEncoders.append(tuple(map(eval, encoder)))
    encoderKeymap.append(tuple(layerEncoders))
